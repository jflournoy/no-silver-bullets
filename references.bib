@inproceedings{beskerTechnicalDebtCripples2018,
  title = {Technical Debt Cripples Software Developer Productivity: A Longitudinal Study on Developers' Daily Software Development Work},
  shorttitle = {Technical Debt Cripples Software Developer Productivity},
  booktitle = {Proceedings of the 2018 {{International Conference}} on {{Technical Debt}}},
  author = {Besker, Terese and Martini, Antonio and Bosch, Jan},
  year = {2018},
  month = may,
  pages = {105--114},
  publisher = {ACM},
  address = {Gothenburg Sweden},
  doi = {10.1145/3194164.3194178},
  urldate = {2024-10-02},
  abstract = {Software companies need to continuously deliver customer value, both from a short- and long-term perspective. However, software development can be impeded by what has been described as Technical Debt (TD). The aim of this study is to explore the negative consequences of TD in terms of wasted software development time. This study also investigates on which additional activities this wasted time is spent and whether different types of TD impact the wasted time differently. This study also sets out to examine the benefits of tracking and communicating the amount of wasted time, both from a developer's and manager's perspective. This paper reports the results of a longitudinal study, surveying 43 software developers, together with follow-up interviews with 16 industrial software practitioners. The analysis of the reported wasted time revealed that developers waste, on average, 23\% of their development time due to TD and that they are frequently forced to introduce new TD due to already existing TD. The most common activity on which additional time is spent is performing additional testing.},
  isbn = {978-1-4503-5713-5},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/CU5HBZ7E/Besker et al. - 2018 - Technical debt cripples software developer productivity a longitudinal study on developers' daily s.pdf}
}

@article{brooksMythicalManMonth,
  title = {The {{Mythical Man Month}}},
  author = {Brooks, Frederick},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/GAAZQCDA/Brooks - The Mythical Man Month.pdf}
}

@article{burknerAdvancedBayesianMultilevel2018,
  ids = {burkner2018},
  title = {Advanced {{Bayesian}} Multilevel Modeling with the {{R}} Package {{brms}}},
  author = {B{\"u}rkner, Paul-Christian},
  year = {2018},
  journal = {The R Journal},
  volume = {10},
  number = {1},
  pages = {395--411},
  doi = {10.32614/RJ-2018-017},
  encoding = {UTF-8},
  file = {/Users/john-flournoy/Zotero/storage/3DIFFMKE/Bürkner-2018-Advanced_Bayesian_multilevel_modeling_with_the_R_package_span.pdf}
}

@article{burknerBrmsPackageBayesian2017,
  ids = {burkner2017a},
  title = {Brms: {{An R Package}} for {{Bayesian Multilevel Models Using Stan}}},
  shorttitle = {Brms},
  author = {B{\"u}rkner, Paul-Christian},
  year = {2017},
  month = aug,
  journal = {Journal of Statistical Software},
  volume = {80},
  number = {1},
  pages = {1--28},
  issn = {1548-7660},
  doi = {10.18637/jss.v080.i01},
  urldate = {2021-03-26},
  copyright = {Copyright (c) 2017 Paul-Christian B{\"u}rkner},
  encoding = {UTF-8},
  langid = {english},
  keywords = {Bayesian inference,MCMC,multilevel model,ordinal data,R,Stan},
  file = {/Users/john-flournoy/Zotero/storage/WWDWSX92/Bürkner_2017_brms.pdf;/Users/john-flournoy/Zotero/storage/B9RWF7R5/v080i01.html}
}

@article{curranDisaggregationPersonPerson2011,
  ids = {curran_disaggregation_2011},
  title = {The {{Disaggregation}} of {{Within-Person}} and {{Between-Person Effects}} in {{Longitudinal Models}} of {{Change}}},
  author = {Curran, Patrick J. and Bauer, Daniel J.},
  year = {2011},
  month = jan,
  journal = {Annual Review of Psychology},
  volume = {62},
  number = {1},
  pages = {583--619},
  issn = {0066-4308, 1545-2085},
  doi = {10.1146/annurev.psych.093008.100356},
  urldate = {2018-10-25},
  abstract = {Longitudinal models are becoming increasingly prevalent in the behavioral sciences, with key advantages including increased power, more comprehensive measurement, and establishment of temporal precedence. One particularly salient strength offered by longitudinal data is the ability to disaggregate between-person and within-person effects in the regression of an outcome on a time-varying covariate. However, the ability to disaggregate these effects has not been fully capitalized upon in many social science research applications. Two likely reasons for this omission are the general lack of discussion of disaggregating effects in the substantive literature and the need to overcome several remaining analytic challenges that limit existing quantitative methods used to isolate these effects in practice. This review explores both substantive and quantitative issues related to the disaggregation of effects over time, with a particular emphasis placed on the multilevel model. Existing analytic methods are reviewed, a general approach to the problem is proposed, and both the existing and proposed methods are demonstrated using several artificial data sets. Potential limitations and directions for future research are discussed, and recommendations for the disaggregation of effects in practice are offered.},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/5NTK6JY3/Curran and Bauer - 2011 - The Disaggregation of Within-Person and Between-Pe.pdf;/Users/john-flournoy/Zotero/storage/XKHMJDQ4/Curran and Bauer - 2011 - The Disaggregation of Within-Person and Between-Pe.pdf}
}

@article{forsgrenSPACEDeveloperProductivity2021,
  title = {The {{SPACE}} of {{Developer Productivity}}: {{There}}'s More to It than You Think.},
  shorttitle = {The {{SPACE}} of {{Developer Productivity}}},
  author = {Forsgren, Nicole and Storey, Margaret-Anne and Maddila, Chandra and Zimmermann, Thomas and Houck, Brian and Butler, Jenna},
  year = {2021},
  month = mar,
  journal = {Queue},
  volume = {19},
  number = {1},
  pages = {Pages 10:20--Pages 10:48},
  issn = {1542-7730},
  doi = {10.1145/3454122.3454124},
  urldate = {2024-09-25},
  abstract = {Developer productivity is about more than an individual's activity levels or the efficiency of the engineering systems relied on to ship software, and it cannot be measured by a single metric or dimension. The SPACE framework captures different dimensions of productivity, and here we demonstrate how this framework can be used to understand productivity in practice and why using it will help teams better understand developer productivity and create better measures to inform their work and teams.},
  file = {/Users/john-flournoy/Zotero/storage/3ZPIZCJF/Forsgren et al. - 2021 - The SPACE of Developer Productivity There's more to it than you think..pdf}
}

@manual{gabryCmdstanrInterfaceCmdStan2024,
  type = {Manual},
  title = {Cmdstanr: {{R Interface}} to '{{CmdStan}}'},
  author = {Gabry, Jonah and {\v C}e{\v s}novar, Rok and Johnson, Andrew and Bronder, Steve},
  year = {2024}
}

@techreport{gelman,
  title = {Stan {{Modeling Language Users Guide}} and {{Reference Manual}}, 2.35},
  author = {Stan Development Team},
  year = {2024},
  keywords = {_diss},
  file = {/Users/john-flournoy/Zotero/storage/3A3N9F2E/Gelman and Stan Development Team - Stan Modeling Language User's Guide and Reference .pdf}
}

@inproceedings{guoNotMyBug2011,
  title = {"{{Not}} My Bug!" And Other Reasons for Software Bug Report Reassignments},
  booktitle = {Proceedings of the {{ACM}} 2011 Conference on {{Computer}} Supported Cooperative Work},
  author = {Guo, Philip J. and Zimmermann, Thomas and Nagappan, Nachiappan and Murphy, Brendan},
  year = {2011},
  month = mar,
  pages = {395--404},
  publisher = {ACM},
  address = {Hangzhou China},
  doi = {10.1145/1958824.1958887},
  urldate = {2024-10-02},
  abstract = {Bug reporting/fixing is an important social part of the software development process. The bug-fixing process inherently has strong inter-personal dynamics at play, especially in how to find the optimal person to handle a bug report. Bug report reassignments, which are a common part of the bug-fixing process, have rarely been studied.},
  isbn = {978-1-4503-0556-3},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/ENGX7TZW/Guo et al. - 2011 - Not my bug! and other reasons for software bug report reassignments.pdf}
}

@misc{hicksNewDeveloperAI2024,
  title = {The {{New Developer}}: {{AI Skill Threat}}, {{Identity Change}} \& {{Developer Thriving}} in the {{Transition}} to {{AI-Assisted Software Development}}},
  shorttitle = {The {{New Developer}}},
  author = {Hicks, Catherine M. and Lee, Carol and {Foster-Marks}, Kristen},
  year = {2024},
  month = apr,
  publisher = {OSF},
  doi = {10.31234/osf.io/2gej5},
  urldate = {2024-10-02},
  abstract = {In this research study, we share original empirical research with 3000+ software engineers and developers across 12+ industries engaged in the transition to Generative AI-assisted software work. We bring a human-centered approach to pressing questions that engineering organizations are facing on the rapidly-changing possibilities of AI-assisted coding. How are developers impacted by changing demands on their roles? Where might there be emerging equity \&amp; opportunity gaps in who has access to these new development capabilities? What are the risks to the quality of technical work, and the developer productivity, thriving, and motivation which drive that technical work? From this work we present a new evidence-based framework to help developers, engineering managers, and leaders as they grapple with failure to thrive in the transition to AI-assisted work: AI Skill Threat. AI Skill Threat describes developers'  fear, anxiety, and worry that their current skills will quickly become obsolete as they adapt to AI-assisted coding. Our framework also predicts when and why AI Skill Threat emerges: engineers who maintain a strong belief in competition and the demonstration of ``innate brilliance'' are more likely to report AI Skill Threat. However, engineers who report the presence of learning cultures and belonging are less likely to report AI Skill Threat. Finally, we document new and emerging equity and opportunity gaps for software teams adopting new tooling practices. AI Skill Threat is higher for Racially Minoritized developers, who also rate the overall quality of AI-assisted coding outputs significantly lower. Both female developers and LGBTQ+ developers were significantly less likely to report plans to upskilling for new AI-assisted workflows. These and other emerging differences point toward a critical need to understand how organizations ensure that AI-assisted coding adoption is equitable and accessible, and that key insights from developers with important perspectives on the risks of AI-assisted coding are heard.},
  archiveprefix = {OSF},
  langid = {american},
  keywords = {belonging,emerging technologies,equity gaps,generative AI,learning,software developers,software development,software team practices,team health,technology teams},
  file = {/Users/john-flournoy/Zotero/storage/2CHYQK8V/Hicks et al. - 2024 - The New Developer AI Skill Threat, Identity Change & Developer Thriving in the Transition to AI-Ass.pdf}
}

@article{inmanDeveloperProductivityHumans2024,
  title = {Developer {{Productivity}} for {{Humans}}, {{Part}} 8: {{Creativity}} in {{Software Engineering}}},
  shorttitle = {Developer {{Productivity}} for {{Humans}}, {{Part}} 8},
  author = {Inman, Sarah and D'Angelo, Sarah and Vasilescu, Bogdan},
  year = {2024},
  month = mar,
  journal = {IEEE Software},
  volume = {41},
  number = {2},
  pages = {11--16},
  issn = {1937-4194},
  doi = {10.1109/MS.2023.3340831},
  urldate = {2024-10-02},
  abstract = {Creativity is an essential part of software engineering. In this column, we describe our approach and insights into how software developers define creativity in their work. Our findings suggest that creativity in software engineering centers on the concepts of clever reuse over pure novelty.},
  file = {/Users/john-flournoy/Zotero/storage/9YL2LB3X/Inman et al. - 2024 - Developer Productivity for Humans, Part 8 Creativity in Software Engineering.pdf;/Users/john-flournoy/Zotero/storage/TQUNVMFB/10445159.html}
}

@article{leeImTrackingCycle,
  title = {I'm {{Tracking Cycle Time}}. {{Now What}}?},
  author = {Lee, Carol S and Wu, Maggie and Hosseini, Masoud and Hicks, Catherine M},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/QXVPCQNW/Lee et al. - I’m Tracking Cycle Time. Now What.pdf}
}

@misc{leeOurOrganizationActually2023,
  title = {Is {{Our Organization Actually Measuring Productivity}}? {{How Contrasting Organizational}} and {{Individual Measures}} of {{Engineering Success}} Is an {{Opportunity}} to {{Drive Engineering Transformation}}},
  shorttitle = {Is {{Our Organization Actually Measuring Productivity}}?},
  author = {Lee, Carol S. and Ramsey, Morgan and Hicks, Catherine M.},
  year = {2023},
  month = may,
  number = {arXiv:2305.11030},
  eprint = {2305.11030},
  primaryclass = {cs},
  publisher = {arXiv},
  doi = {10.48550/arXiv.2305.11030},
  urldate = {2023-07-12},
  abstract = {Background: Previous research highlights that common misconceptions about developer productivity lead to harmful and inaccurate evaluations of software work, pointing to the need for organizations to differentiate between measures of production, productivity, and performance as an important step that helps to suggest improvements to how we measure the success of engineering teams. Methodology: Using a card sort, we explored how a Three Layer Productivity Framework was used by 16 software engineers at a Software Engineering focused conference to rank measures of success, first in the current practice of their organization and second in their individual beliefs about the best ways to measure engineering success. Results and discussion: Overall, participants preferred organizations to 1) continue their prioritized focus on performance layer metrics, 2) increase the focus on productivity metrics, and 3) decrease their focus on production metrics. When asked about the current metrics of their organizations, while all roles reported a current focus on performance metrics, only ICs reported a strong focus on production metrics. When asked about metrics they would prefer, all roles preferred more performance metrics but only leaders and ICs also wanted productivity metrics. While all participants were aligned on performance metrics being a top preference, there was misalignment on which specific metrics are used. Our findings show that when measuring developer success, organizations should continue measurement using performance metrics, consider an increased focus on productivity metrics, and consider a decreased focus on production metrics.},
  archiveprefix = {arXiv},
  keywords = {Computer Science - Software Engineering,D.2.8,D.m},
  file = {/Users/john-flournoy/Zotero/storage/MG5MCXNX/Lee et al. - 2023 - Is Our Organization Actually Measuring Productivit.pdf;/Users/john-flournoy/Zotero/storage/GF6AKSE7/Lee et al. - 2023 - Is Our Organization Actually Measuring Productivit.html}
}

@article{murphy-hillWhatPredictsSoftware2021a,
  title = {What {{Predicts Software Developers}}' {{Productivity}}?},
  author = {{Murphy-Hill}, Emerson and Jaspan, Ciera and Sadowski, Caitlin and Shepherd, David and Phillips, Michael and Winter, Collin and Knight, Andrea and Smith, Edward and Jorde, Matthew},
  year = {2021},
  month = mar,
  journal = {IEEE Transactions on Software Engineering},
  volume = {47},
  number = {3},
  pages = {582--594},
  issn = {0098-5589, 1939-3520, 2326-3881},
  doi = {10.1109/TSE.2019.2900308},
  urldate = {2024-10-02},
  abstract = {Organizations have a variety of options to help their software developers become their most productive selves, from modifying office layouts, to investing in better tools, to cleaning up the source code. But which options will have the biggest impact? Drawing from the literature in software engineering and industrial/organizational psychology to identify factors that correlate with productivity, we designed a survey that asked 622 developers across 3 companies about these productivity factors and about self-rated productivity. Our results suggest that the factors that most strongly correlate with self-rated productivity were non-technical factors, such as job enthusiasm, peer support for new ideas, and receiving useful feedback about job performance. Compared to other knowledge workers, our results also suggest that software developers' self-rated productivity is more strongly related to task variety and ability to work remotely.},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/VQD56SG5/Murphy-Hill et al. - 2021 - What Predicts Software Developers’ Productivity.pdf}
}

@article{nicholsEndMythIndividual2019,
  title = {The {{End}} to the {{Myth}} of {{Individual Programmer Productivity}}},
  author = {Nichols, William R.},
  year = {2019},
  month = sep,
  journal = {IEEE Software},
  volume = {36},
  number = {5},
  pages = {71--75},
  issn = {1937-4194},
  doi = {10.1109/MS.2019.2908576},
  urldate = {2024-10-02},
  abstract = {One often-quoted truism in software engineering is that good programmers are "much much better" than bad programmers. The size of "much much better" is widely debated, but ranges such as 10 times more productive are often cited as conservative estimates. This article argues that such statements are misleading and miss numerous important effects. Based on the studies described later, it would appear that some programmers are not inherently exceedingly better than others.},
  keywords = {Productivity,Programming profession,Security,Software engineering},
  file = {/Users/john-flournoy/Zotero/storage/CD86RLMZ/Nichols - 2019 - The End to the Myth of Individual Programmer Productivity.pdf}
}

@inproceedings{nistalaSoftwareQualityModels2019,
  title = {Software {{Quality Models}}: {{A Systematic Mapping Study}}},
  shorttitle = {Software {{Quality Models}}},
  booktitle = {2019 {{IEEE}}/{{ACM International Conference}} on {{Software}} and {{System Processes}} ({{ICSSP}})},
  author = {Nistala, Padmalata and Nori, Kesav Vithal and Reddy, Raghu},
  year = {2019},
  month = may,
  pages = {125--134},
  doi = {10.1109/ICSSP.2019.00025},
  urldate = {2024-09-25},
  abstract = {Quality Models play a critical role in assuring quality and have evolved over 40+ years. They provide support for defining quality attributes, building and measuring the quality of the resulting product. Each quality model adopts a critical view on quality in terms of a set of model elements and relationships between them. This study aims to provide an overview of the state-of-the-art research on quality models with a focus on encompassing model elements and their support to architecting quality. The study was conducted using systematic mapping as the research methodology. A total of 238 primary papers were classified based on the type of research, standards usage, and publication trends. We identified that 17\% (40) of papers belong to quality models. These 40 models were analyzed for the underlying meta-model elements and their support for a quality architecture using Bayer's reference architecture framework. The architecture phase mapping analysis shows that quality planning phase is 100\% supported, quality assessment is 75\% supported, quality documentation is included in 40\% models and quality realization aspect is barely considered in 13\% models. Quality realization happens through software processes and patterns, and it is necessary to evolve quality models and software process architectures that correlate quality definitions and quality realization mechanisms. Future research is expected in this direction.},
  keywords = {Analytical models,Computer architecture,ISO Standards,Object oriented modeling,Software quality,Software Quality Product Quality Software Process Quality Model Quality Meta Model Quality Characteristic Quality Pattern Quality Architecture Reference architecture Quality Realization,Systematics},
  file = {/Users/john-flournoy/Zotero/storage/QBTJ2R7W/Nistala et al. - 2019 - Software Quality Models A Systematic Mapping Study.pdf;/Users/john-flournoy/Zotero/storage/T2WK8ZCA/8812848.html}
}

@article{ramirezMeasuringKnowledgeWorker2004,
  title = {Measuring Knowledge Worker Productivity},
  author = {Ram{\'i}rez, Yuri W. and Nembhard, David A.},
  year = {2004},
  month = jan,
  journal = {Journal of Intellectual Capital},
  volume = {5},
  number = {4},
  pages = {602--628},
  publisher = {Emerald Group Publishing Limited},
  issn = {1469-1930},
  doi = {10.1108/14691930410567040},
  urldate = {2024-10-02},
  abstract = {The structure of the economy continues to change; where once they are dependent on the productivity of a manual workforce, companies increasingly depend on the productivity of knowledge workers. Today, knowledge workers account for more than two-thirds of the workforce, and thus should be the focus of strategic plans to improve productivity. Currently there are no universally accepted methods to measure knowledge worker productivity, or even generally accepted categories. This paper provides a taxonomy of knowledge worker productivity measurements, and identifies a number of productivity dimensions that are used to categorize the findings of previous research. Also describes the relative density of discussions along these dimensions and identifies critical areas for future research.},
  keywords = {Employee productivity,Knowledge organizations,Performance measures,Quality},
  file = {/Users/john-flournoy/Zotero/storage/FVDRG4Y3/Ramírez and Nembhard - 2004 - Measuring knowledge worker productivity.pdf}
}

@article{ramirezMeasuringKnowledgeWorker2004a,
  title = {Measuring Knowledge Worker Productivity},
  author = {Ram{\'i}rez, Yuri W. and Nembhard, David A.},
  year = {2004},
  month = jan,
  journal = {Journal of Intellectual Capital},
  volume = {5},
  number = {4},
  pages = {602--628},
  publisher = {Emerald Group Publishing Limited},
  issn = {1469-1930},
  doi = {10.1108/14691930410567040},
  urldate = {2024-10-07},
  abstract = {The structure of the economy continues to change; where once they are dependent on the productivity of a manual workforce, companies increasingly depend on the productivity of knowledge workers. Today, knowledge workers account for more than two-thirds of the workforce, and thus should be the focus of strategic plans to improve productivity. Currently there are no universally accepted methods to measure knowledge worker productivity, or even generally accepted categories. This paper provides a taxonomy of knowledge worker productivity measurements, and identifies a number of productivity dimensions that are used to categorize the findings of previous research. Also describes the relative density of discussions along these dimensions and identifies critical areas for future research.},
  keywords = {Employee productivity,Knowledge organizations,Performance measures,Quality},
  file = {/Users/john-flournoy/Zotero/storage/VSEXLHL5/Ramírez and Nembhard - 2004 - Measuring knowledge worker productivity.pdf}
}

@manual{rcoreteamLanguageEnvironmentStatistical2023,
  type = {Manual},
  title = {R: A Language and Environment for Statistical Computing},
  author = {{R Core Team}},
  year = {2023},
  address = {Vienna, Austria},
  institution = {R Foundation for Statistical Computing}
}

@inproceedings{ruvimovaExploratoryStudyProductivity2022,
  title = {An Exploratory Study of Productivity Perceptions in Software Teams},
  booktitle = {Proceedings of the 44th {{International Conference}} on {{Software Engineering}}},
  author = {Ruvimova, Anastasia and Lill, Alexander and Gugler, Jan and Howe, Lauren and Huang, Elaine and Murphy, Gail and Fritz, Thomas},
  year = {2022},
  month = may,
  pages = {99--111},
  publisher = {ACM},
  address = {Pittsburgh Pennsylvania},
  doi = {10.1145/3510003.3510081},
  urldate = {2022-11-12},
  isbn = {978-1-4503-9221-1},
  langid = {english},
  keywords = {over time measures,productivity,qual and quant cycle,team productivity},
  file = {/Users/john-flournoy/Zotero/storage/FHFB6UA2/3510003.3510081 (1).pdf}
}

@article{sackmanExploratoryExperimentalStudies1968,
  title = {Exploratory Experimental Studies Comparing Online and Offline Programming Performance},
  author = {Sackman, H. and Erikson, W. J. and Grant, E. E.},
  year = {1968},
  month = jan,
  journal = {Communications of the ACM},
  volume = {11},
  number = {1},
  pages = {3--11},
  issn = {0001-0782, 1557-7317},
  doi = {10.1145/362851.362858},
  urldate = {2024-10-02},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/IKVFR7ZR/Sackman et al. - 1968 - Exploratory experimental studies comparing online and offline programming performance.pdf}
}

@incollection{sadowskiSoftwareDevelopmentProductivity2019,
  title = {A {{Software Development Productivity Framework}}},
  booktitle = {Rethinking {{Productivity}} in {{Software Engineering}}},
  author = {Sadowski, Caitlin and Storey, Margaret-Anne and Feldt, Robert},
  editor = {Sadowski, Caitlin and Zimmermann, Thomas},
  year = {2019},
  pages = {39--47},
  publisher = {Apress},
  address = {Berkeley, CA},
  doi = {10.1007/978-1-4842-4221-6_5},
  urldate = {2024-10-02},
  isbn = {978-1-4842-4220-9 978-1-4842-4221-6},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/IKEIY6GH/Sadowski et al. - 2019 - A Software Development Productivity Framework.pdf}
}

@article{shrikanthAssessingPractitionerBeliefs2021,
  title = {Assessing Practitioner Beliefs about Software Engineering},
  author = {Shrikanth, N. C. and Nichols, William and Fahid, Fahmid Morshed and Menzies, Tim},
  year = {2021},
  month = may,
  journal = {Empirical Software Engineering},
  volume = {26},
  number = {4},
  pages = {73},
  issn = {1573-7616},
  doi = {10.1007/s10664-021-09957-5},
  urldate = {2024-10-02},
  abstract = {Software engineering is a highly dynamic discipline. Hence, as times change, so too might our beliefs about core processes in this field. This paper checks some five beliefs that originated in the past decades that comment on the relationships between (i) developer productivity; (ii) software quality and (iii) years of developer experience. Using data collected from 1,356 developers in the period 1995 to 2006, we found support for only one of the five beliefs titled ``Quality entails productivity.'' We found no clear support for four other beliefs based on programming languages and software developers. However, from the sporadic evidence of the four other beliefs, we learned that a narrow scope could delude practitioners in misinterpreting certain effects to hold in their day-to-day work. Lastly, through an aggregated view of assessing the five beliefs, we find programming languages act as a confounding factor for developer productivity and software quality. Thus the overall message of this work is that it is both important and possible to revisit old beliefs in software engineering. Researchers and practitioners should routinely retest old beliefs.},
  langid = {english},
  keywords = {Beliefs,Experience,Productivity,Quality,Software analytics},
  file = {/Users/john-flournoy/Zotero/storage/9KUV232M/Shrikanth et al. - 2021 - Assessing practitioner beliefs about software engineering.pdf}
}

@misc{storeyHowDevelopersManagers2022,
  title = {How {{Developers}} and {{Managers Define}} and {{Trade Productivity}} for {{Quality}}},
  author = {Storey, Margaret-Anne and Houck, Brian and Zimmermann, Thomas},
  year = {2022},
  month = apr,
  eprint = {2111.04302},
  primaryclass = {cs},
  doi = {10.1145/3528579.3529177},
  urldate = {2022-07-18},
  abstract = {Objective \& Method: Through an exploratory survey study with developers and managers at Microsoft, we investigated how these cohorts define productivity and quality, how aligned they are in their views, how aware they are of other views, and if and how they trade quality for productivity. Results: We find developers and managers, as cohorts, are not well-aligned in their views of productivity---developers think more about work activities, while more managers consider performance or quality outcomes. We find developers and managers have more aligned views of what quality means, with the majority defining quality in terms of robustness, while the timely delivery of evolvable features that delight users are also key quality aspects. Over half of the developers and managers we surveyed make productivity and quality trade-offs but with good reasons for doing so. Conclusion: Alignment on how developers and managers define productivity and quality is essential if they are to design effective improvement interventions and meaningful metrics to measure productivity and quality improvements. Our research provides a frame for developers and managers to align their views and to make informed decisions on productivity and quality trade-offs.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Software Engineering,team productivity},
  file = {/Users/john-flournoy/Zotero/storage/D8UWJDER/Storey et al. - 2022 - How Developers and Managers Define and Trade Produ.pdf}
}

@article{storeyTheorySoftwareDeveloper2021,
  title = {Towards a {{Theory}} of {{Software Developer Job Satisfaction}} and {{Perceived Productivity}}},
  author = {Storey, Margaret-Anne and Zimmermann, Thomas and Bird, Christian and Czerwonka, Jacek and Murphy, Brendan and Kalliamvakou, Eirini},
  year = {2021},
  month = oct,
  journal = {IEEE Transactions on Software Engineering},
  volume = {47},
  number = {10},
  pages = {2125--2142},
  issn = {0098-5589, 1939-3520, 2326-3881},
  doi = {10.1109/TSE.2019.2944354},
  urldate = {2022-07-18},
  abstract = {Developer satisfaction and work productivity are important considerations for software companies. Enhanced developer satisfaction may improve the attraction, retention and health of employees, while higher productivity should reduce costs and increase customer satisfaction through faster software improvements. Many researchers and companies assume that perceived productivity and job satisfaction are related and may be used as proxies for one another, but these claims are a current topic of debate. There are also many social and technical factors that may impact satisfaction and productivity, but which factors have the most impact is not clear, especially for specific development contexts. Through our research, we developed a theory articulating a bidirectional relationship between software developer job satisfaction and perceived productivity, and identified what additional social and technical factors, challenges and work context variables influence this relationship. The constructs and relationships in our theory were derived in part from related literature in software engineering and knowledge work, and we validated and extended these concepts through a rigorously designed survey instrument. We instantiate our theory with a large software company, which suggests a number of propositions about the relative impact of various factors and challenges on developer satisfaction and perceived productivity. Our survey instrument and analysis approach can be applied to other development settings, while our findings lead to concrete recommendations for practitioners and researchers.},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/752M3TYU/Storey et al. - 2021 - Towards a Theory of Software Developer Job Satisfa.pdf;/Users/john-flournoy/Zotero/storage/YAC93GY8/Storey et al. - Appendix to How Developers and Managers Define and.pdf}
}

@article{tangenDemystifyingProductivityPerformance2005,
  title = {Demystifying Productivity and Performance},
  author = {Tangen, Stefan},
  year = {2005},
  month = jan,
  journal = {International Journal of Productivity and Performance Management},
  volume = {54},
  number = {1},
  pages = {34--46},
  issn = {1741-0401},
  doi = {10.1108/17410400510571437},
  urldate = {2023-03-06},
  abstract = {Purpose -- Examines the ways in which the concepts of ``productivity'' and ``performance'' are dealt with in the literature, demonstrating that terms used within these fields are often vaguely defined and poorly understood.},
  langid = {english},
  file = {/Users/john-flournoy/Zotero/storage/S4AIJZDF/Tangen - 2005 - Demystifying productivity and performance.pdf}
}

@article{vansolingenMeasuringROISoftware2004,
  title = {Measuring the {{ROI}} of Software Process Improvement},
  author = {Van Solingen, R.},
  year = {2004},
  month = may,
  journal = {IEEE Software},
  volume = {21},
  number = {3},
  pages = {32--38},
  issn = {0740-7459},
  doi = {10.1109/MS.2004.1293070},
  urldate = {2023-05-12},
  langid = {english}
}
